// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file res.proto (package wire, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file res.proto.
 */
export const file_res: GenFile = /*@__PURE__*/
  fileDesc("CglyZXMucHJvdG8SBHdpcmUi9QkKBlJlc3VsdBIcCgZzdGF0dXMYASABKA4yDC53aXJlLlN0YXR1cxIPCgdtZXNzYWdlGAIgASgJEiYKBWF0dHJzGAMgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIgCgdUWVBFUmVzGAQgASgLMg0ud2lyZS5UWVBFUmVzSAASIAoHUElOR1JlcxgIIAEoCzINLndpcmUuUElOR1Jlc0gAEiAKB0VDSE9SZXMYCSABKAsyDS53aXJlLkVDSE9SZXNIABIqCgxIQU5EU0hBS0VSZXMYCiABKAsyEi53aXJlLkhBTkRTSEFLRVJlc0gAEiQKCUVYSVNUU1JlcxgLIAEoCzIPLndpcmUuRVhJU1RTUmVzSAASHgoGR0VUUmVzGAwgASgLMgwud2lyZS5HRVRSZXNIABIeCgZTRVRSZXMYDSABKAsyDC53aXJlLlNFVFJlc0gAEh4KBkRFTFJlcxgOIAEoCzIMLndpcmUuREVMUmVzSAASIAoHS0VZU1JlcxgPIAEoCzINLndpcmUuS0VZU1Jlc0gAEiQKCUdFVERFTFJlcxgQIAEoCzIPLndpcmUuR0VUREVMUmVzSAASIgoIR0VURVhSZXMYESABKAsyDi53aXJlLkdFVEVYUmVzSAASJAoJR0VUU0VUUmVzGBIgASgLMg8ud2lyZS5HRVRTRVRSZXNIABIgCgdJTkNSUmVzGBMgASgLMg0ud2lyZS5JTkNSUmVzSAASIAoHREVDUlJlcxgUIAEoCzINLndpcmUuREVDUlJlc0gAEiQKCUlOQ1JCWVJlcxgVIAEoCzIPLndpcmUuSU5DUkJZUmVzSAASJAoJREVDUkJZUmVzGBYgASgLMg8ud2lyZS5ERUNSQllSZXNIABImCgpGTFVTSERCUmVzGBcgASgLMhAud2lyZS5GTFVTSERCUmVzSAASJAoJRVhQSVJFUmVzGBggASgLMg8ud2lyZS5FWFBJUkVSZXNIABIoCgtFWFBJUkVBVFJlcxgZIAEoCzIRLndpcmUuRVhQSVJFQVRSZXNIABIsCg1FWFBJUkVUSU1FUmVzGBogASgLMhMud2lyZS5FWFBJUkVUSU1FUmVzSAASHgoGVFRMUmVzGBsgASgLMgwud2lyZS5UVExSZXNIABIoCgtHRVRXQVRDSFJlcxgcIAEoCzIRLndpcmUuR0VUV0FUQ0hSZXNIABImCgpVTldBVENIUmVzGB0gASgLMhAud2lyZS5VTldBVENIUmVzSAASIAoHSEdFVFJlcxgeIAEoCzINLndpcmUuSEdFVFJlc0gAEiAKB0hTRVRSZXMYHyABKAsyDS53aXJlLkhTRVRSZXNIABImCgpIR0VUQUxMUmVzGCAgASgLMhAud2lyZS5IR0VUQUxMUmVzSAASKgoMSEdFVFdBVENIUmVzGCEgASgLMhIud2lyZS5IR0VUV0FUQ0hSZXNIABIwCg9IR0VUQUxMV0FUQ0hSZXMYIiABKAsyFS53aXJlLkhHRVRBTExXQVRDSFJlc0gAEiAKB1pBRERSZXMYIyABKAsyDS53aXJlLlpBRERSZXNIABIkCglaQ09VTlRSZXMYJCABKAsyDy53aXJlLlpDT1VOVFJlc0gAEiQKCVpSQU5HRVJlcxglIAEoCzIPLndpcmUuWlJBTkdFUmVzSABCCgoIcmVzcG9uc2UiDgoMSEdFVFdBVENIUmVzIhEKD0hHRVRBTExXQVRDSFJlcyINCgtHRVRXQVRDSFJlcyIMCgpVTldBVENIUmVzIhgKB1pBRERSZXMSDQoFY291bnQYASABKAMiGgoJWkNPVU5UUmVzEg0KBWNvdW50GAEgASgDIhcKB1RZUEVSZXMSDAoEdHlwZRgBIAEoCSIaCgdQSU5HUmVzEg8KB21lc3NhZ2UYASABKAkiGAoHSEdFVFJlcxINCgV2YWx1ZRgBIAEoCSIYCgdIU0VUUmVzEg0KBWNvdW50GAEgASgDIiYKCEhFbGVtZW50EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSIuCgpIR0VUQUxMUmVzEiAKCGVsZW1lbnRzGAEgAygLMg4ud2lyZS5IRWxlbWVudCIZCgZUVExSZXMSDwoHc2Vjb25kcxgBIAEoAyIfCglFWFBJUkVSZXMSEgoKaXNfY2hhbmdlZBgBIAEoCCIhCgtFWFBJUkVBVFJlcxISCgppc19jaGFuZ2VkGAEgASgIIiEKDUVYUElSRVRJTUVSZXMSEAoIdW5peF9zZWMYASABKAMiGgoHRUNIT1JlcxIPCgdtZXNzYWdlGAEgASgJIhoKCUVYSVNUU1JlcxINCgVjb3VudBgBIAEoAyIOCgxIQU5EU0hBS0VSZXMiFwoGR0VUUmVzEg0KBXZhbHVlGAEgASgJIhkKCEdFVEVYUmVzEg0KBXZhbHVlGAEgASgJIhoKCUdFVFNFVFJlcxINCgV2YWx1ZRgBIAEoCSIaCglHRVRERUxSZXMSDQoFdmFsdWUYASABKAkiCAoGU0VUUmVzIhcKBkRFTFJlcxINCgVjb3VudBgBIAEoAyIMCgpGTFVTSERCUmVzIhcKB0tFWVNSZXMSDAoEa2V5cxgBIAMoCSIYCgdJTkNSUmVzEg0KBXZhbHVlGAEgASgDIhgKB0RFQ1JSZXMSDQoFdmFsdWUYASABKAMiGgoJSU5DUkJZUmVzEg0KBXZhbHVlGAEgASgDIhoKCURFQ1JCWVJlcxINCgV2YWx1ZRgBIAEoAyIpCghaRWxlbWVudBINCgVzY29yZRgBIAEoAxIOCgZtZW1iZXIYAiABKAkiLQoJWlJBTkdFUmVzEiAKCGVsZW1lbnRzGAEgAygLMg4ud2lyZS5aRWxlbWVudCoZCgZTdGF0dXMSBgoCT0sQABIHCgNFUlIQAUIIWgYuL3dpcmViBnByb3RvMw", [file_google_protobuf_struct]);

/**
 * @generated from message wire.Result
 */
export type Result = Message<"wire.Result"> & {
  /**
   * @generated from field: wire.Status status = 1;
   */
  status: Status;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Struct attrs = 3;
   */
  attrs?: JsonObject;

  /**
   * @generated from oneof wire.Result.response
   */
  response: {
    /**
     * @generated from field: wire.TYPERes TYPERes = 4;
     */
    value: TYPERes;
    case: "TYPERes";
  } | {
    /**
     * @generated from field: wire.PINGRes PINGRes = 8;
     */
    value: PINGRes;
    case: "PINGRes";
  } | {
    /**
     * @generated from field: wire.ECHORes ECHORes = 9;
     */
    value: ECHORes;
    case: "ECHORes";
  } | {
    /**
     * @generated from field: wire.HANDSHAKERes HANDSHAKERes = 10;
     */
    value: HANDSHAKERes;
    case: "HANDSHAKERes";
  } | {
    /**
     * @generated from field: wire.EXISTSRes EXISTSRes = 11;
     */
    value: EXISTSRes;
    case: "EXISTSRes";
  } | {
    /**
     * @generated from field: wire.GETRes GETRes = 12;
     */
    value: GETRes;
    case: "GETRes";
  } | {
    /**
     * @generated from field: wire.SETRes SETRes = 13;
     */
    value: SETRes;
    case: "SETRes";
  } | {
    /**
     * @generated from field: wire.DELRes DELRes = 14;
     */
    value: DELRes;
    case: "DELRes";
  } | {
    /**
     * @generated from field: wire.KEYSRes KEYSRes = 15;
     */
    value: KEYSRes;
    case: "KEYSRes";
  } | {
    /**
     * @generated from field: wire.GETDELRes GETDELRes = 16;
     */
    value: GETDELRes;
    case: "GETDELRes";
  } | {
    /**
     * @generated from field: wire.GETEXRes GETEXRes = 17;
     */
    value: GETEXRes;
    case: "GETEXRes";
  } | {
    /**
     * @generated from field: wire.GETSETRes GETSETRes = 18;
     */
    value: GETSETRes;
    case: "GETSETRes";
  } | {
    /**
     * @generated from field: wire.INCRRes INCRRes = 19;
     */
    value: INCRRes;
    case: "INCRRes";
  } | {
    /**
     * @generated from field: wire.DECRRes DECRRes = 20;
     */
    value: DECRRes;
    case: "DECRRes";
  } | {
    /**
     * @generated from field: wire.INCRBYRes INCRBYRes = 21;
     */
    value: INCRBYRes;
    case: "INCRBYRes";
  } | {
    /**
     * @generated from field: wire.DECRBYRes DECRBYRes = 22;
     */
    value: DECRBYRes;
    case: "DECRBYRes";
  } | {
    /**
     * @generated from field: wire.FLUSHDBRes FLUSHDBRes = 23;
     */
    value: FLUSHDBRes;
    case: "FLUSHDBRes";
  } | {
    /**
     * @generated from field: wire.EXPIRERes EXPIRERes = 24;
     */
    value: EXPIRERes;
    case: "EXPIRERes";
  } | {
    /**
     * @generated from field: wire.EXPIREATRes EXPIREATRes = 25;
     */
    value: EXPIREATRes;
    case: "EXPIREATRes";
  } | {
    /**
     * @generated from field: wire.EXPIRETIMERes EXPIRETIMERes = 26;
     */
    value: EXPIRETIMERes;
    case: "EXPIRETIMERes";
  } | {
    /**
     * @generated from field: wire.TTLRes TTLRes = 27;
     */
    value: TTLRes;
    case: "TTLRes";
  } | {
    /**
     * @generated from field: wire.GETWATCHRes GETWATCHRes = 28;
     */
    value: GETWATCHRes;
    case: "GETWATCHRes";
  } | {
    /**
     * @generated from field: wire.UNWATCHRes UNWATCHRes = 29;
     */
    value: UNWATCHRes;
    case: "UNWATCHRes";
  } | {
    /**
     * @generated from field: wire.HGETRes HGETRes = 30;
     */
    value: HGETRes;
    case: "HGETRes";
  } | {
    /**
     * @generated from field: wire.HSETRes HSETRes = 31;
     */
    value: HSETRes;
    case: "HSETRes";
  } | {
    /**
     * @generated from field: wire.HGETALLRes HGETALLRes = 32;
     */
    value: HGETALLRes;
    case: "HGETALLRes";
  } | {
    /**
     * @generated from field: wire.HGETWATCHRes HGETWATCHRes = 33;
     */
    value: HGETWATCHRes;
    case: "HGETWATCHRes";
  } | {
    /**
     * @generated from field: wire.HGETALLWATCHRes HGETALLWATCHRes = 34;
     */
    value: HGETALLWATCHRes;
    case: "HGETALLWATCHRes";
  } | {
    /**
     * @generated from field: wire.ZADDRes ZADDRes = 35;
     */
    value: ZADDRes;
    case: "ZADDRes";
  } | {
    /**
     * @generated from field: wire.ZCOUNTRes ZCOUNTRes = 36;
     */
    value: ZCOUNTRes;
    case: "ZCOUNTRes";
  } | {
    /**
     * @generated from field: wire.ZRANGERes ZRANGERes = 37;
     */
    value: ZRANGERes;
    case: "ZRANGERes";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message wire.Result.
 * Use `create(ResultSchema)` to create a new message.
 */
export const ResultSchema: GenMessage<Result> = /*@__PURE__*/
  messageDesc(file_res, 0);

/**
 * @generated from message wire.HGETWATCHRes
 */
export type HGETWATCHRes = Message<"wire.HGETWATCHRes"> & {
};

/**
 * Describes the message wire.HGETWATCHRes.
 * Use `create(HGETWATCHResSchema)` to create a new message.
 */
export const HGETWATCHResSchema: GenMessage<HGETWATCHRes> = /*@__PURE__*/
  messageDesc(file_res, 1);

/**
 * @generated from message wire.HGETALLWATCHRes
 */
export type HGETALLWATCHRes = Message<"wire.HGETALLWATCHRes"> & {
};

/**
 * Describes the message wire.HGETALLWATCHRes.
 * Use `create(HGETALLWATCHResSchema)` to create a new message.
 */
export const HGETALLWATCHResSchema: GenMessage<HGETALLWATCHRes> = /*@__PURE__*/
  messageDesc(file_res, 2);

/**
 * @generated from message wire.GETWATCHRes
 */
export type GETWATCHRes = Message<"wire.GETWATCHRes"> & {
};

/**
 * Describes the message wire.GETWATCHRes.
 * Use `create(GETWATCHResSchema)` to create a new message.
 */
export const GETWATCHResSchema: GenMessage<GETWATCHRes> = /*@__PURE__*/
  messageDesc(file_res, 3);

/**
 * @generated from message wire.UNWATCHRes
 */
export type UNWATCHRes = Message<"wire.UNWATCHRes"> & {
};

/**
 * Describes the message wire.UNWATCHRes.
 * Use `create(UNWATCHResSchema)` to create a new message.
 */
export const UNWATCHResSchema: GenMessage<UNWATCHRes> = /*@__PURE__*/
  messageDesc(file_res, 4);

/**
 * @generated from message wire.ZADDRes
 */
export type ZADDRes = Message<"wire.ZADDRes"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message wire.ZADDRes.
 * Use `create(ZADDResSchema)` to create a new message.
 */
export const ZADDResSchema: GenMessage<ZADDRes> = /*@__PURE__*/
  messageDesc(file_res, 5);

/**
 * @generated from message wire.ZCOUNTRes
 */
export type ZCOUNTRes = Message<"wire.ZCOUNTRes"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message wire.ZCOUNTRes.
 * Use `create(ZCOUNTResSchema)` to create a new message.
 */
export const ZCOUNTResSchema: GenMessage<ZCOUNTRes> = /*@__PURE__*/
  messageDesc(file_res, 6);

/**
 * @generated from message wire.TYPERes
 */
export type TYPERes = Message<"wire.TYPERes"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message wire.TYPERes.
 * Use `create(TYPEResSchema)` to create a new message.
 */
export const TYPEResSchema: GenMessage<TYPERes> = /*@__PURE__*/
  messageDesc(file_res, 7);

/**
 * @generated from message wire.PINGRes
 */
export type PINGRes = Message<"wire.PINGRes"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message wire.PINGRes.
 * Use `create(PINGResSchema)` to create a new message.
 */
export const PINGResSchema: GenMessage<PINGRes> = /*@__PURE__*/
  messageDesc(file_res, 8);

/**
 * @generated from message wire.HGETRes
 */
export type HGETRes = Message<"wire.HGETRes"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message wire.HGETRes.
 * Use `create(HGETResSchema)` to create a new message.
 */
export const HGETResSchema: GenMessage<HGETRes> = /*@__PURE__*/
  messageDesc(file_res, 9);

/**
 * @generated from message wire.HSETRes
 */
export type HSETRes = Message<"wire.HSETRes"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message wire.HSETRes.
 * Use `create(HSETResSchema)` to create a new message.
 */
export const HSETResSchema: GenMessage<HSETRes> = /*@__PURE__*/
  messageDesc(file_res, 10);

/**
 * @generated from message wire.HElement
 */
export type HElement = Message<"wire.HElement"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message wire.HElement.
 * Use `create(HElementSchema)` to create a new message.
 */
export const HElementSchema: GenMessage<HElement> = /*@__PURE__*/
  messageDesc(file_res, 11);

/**
 * @generated from message wire.HGETALLRes
 */
export type HGETALLRes = Message<"wire.HGETALLRes"> & {
  /**
   * @generated from field: repeated wire.HElement elements = 1;
   */
  elements: HElement[];
};

/**
 * Describes the message wire.HGETALLRes.
 * Use `create(HGETALLResSchema)` to create a new message.
 */
export const HGETALLResSchema: GenMessage<HGETALLRes> = /*@__PURE__*/
  messageDesc(file_res, 12);

/**
 * @generated from message wire.TTLRes
 */
export type TTLRes = Message<"wire.TTLRes"> & {
  /**
   * @generated from field: int64 seconds = 1;
   */
  seconds: bigint;
};

/**
 * Describes the message wire.TTLRes.
 * Use `create(TTLResSchema)` to create a new message.
 */
export const TTLResSchema: GenMessage<TTLRes> = /*@__PURE__*/
  messageDesc(file_res, 13);

/**
 * @generated from message wire.EXPIRERes
 */
export type EXPIRERes = Message<"wire.EXPIRERes"> & {
  /**
   * @generated from field: bool is_changed = 1;
   */
  isChanged: boolean;
};

/**
 * Describes the message wire.EXPIRERes.
 * Use `create(EXPIREResSchema)` to create a new message.
 */
export const EXPIREResSchema: GenMessage<EXPIRERes> = /*@__PURE__*/
  messageDesc(file_res, 14);

/**
 * @generated from message wire.EXPIREATRes
 */
export type EXPIREATRes = Message<"wire.EXPIREATRes"> & {
  /**
   * @generated from field: bool is_changed = 1;
   */
  isChanged: boolean;
};

/**
 * Describes the message wire.EXPIREATRes.
 * Use `create(EXPIREATResSchema)` to create a new message.
 */
export const EXPIREATResSchema: GenMessage<EXPIREATRes> = /*@__PURE__*/
  messageDesc(file_res, 15);

/**
 * @generated from message wire.EXPIRETIMERes
 */
export type EXPIRETIMERes = Message<"wire.EXPIRETIMERes"> & {
  /**
   * @generated from field: int64 unix_sec = 1;
   */
  unixSec: bigint;
};

/**
 * Describes the message wire.EXPIRETIMERes.
 * Use `create(EXPIRETIMEResSchema)` to create a new message.
 */
export const EXPIRETIMEResSchema: GenMessage<EXPIRETIMERes> = /*@__PURE__*/
  messageDesc(file_res, 16);

/**
 * @generated from message wire.ECHORes
 */
export type ECHORes = Message<"wire.ECHORes"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message wire.ECHORes.
 * Use `create(ECHOResSchema)` to create a new message.
 */
export const ECHOResSchema: GenMessage<ECHORes> = /*@__PURE__*/
  messageDesc(file_res, 17);

/**
 * @generated from message wire.EXISTSRes
 */
export type EXISTSRes = Message<"wire.EXISTSRes"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message wire.EXISTSRes.
 * Use `create(EXISTSResSchema)` to create a new message.
 */
export const EXISTSResSchema: GenMessage<EXISTSRes> = /*@__PURE__*/
  messageDesc(file_res, 18);

/**
 * @generated from message wire.HANDSHAKERes
 */
export type HANDSHAKERes = Message<"wire.HANDSHAKERes"> & {
};

/**
 * Describes the message wire.HANDSHAKERes.
 * Use `create(HANDSHAKEResSchema)` to create a new message.
 */
export const HANDSHAKEResSchema: GenMessage<HANDSHAKERes> = /*@__PURE__*/
  messageDesc(file_res, 19);

/**
 * @generated from message wire.GETRes
 */
export type GETRes = Message<"wire.GETRes"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message wire.GETRes.
 * Use `create(GETResSchema)` to create a new message.
 */
export const GETResSchema: GenMessage<GETRes> = /*@__PURE__*/
  messageDesc(file_res, 20);

/**
 * @generated from message wire.GETEXRes
 */
export type GETEXRes = Message<"wire.GETEXRes"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message wire.GETEXRes.
 * Use `create(GETEXResSchema)` to create a new message.
 */
export const GETEXResSchema: GenMessage<GETEXRes> = /*@__PURE__*/
  messageDesc(file_res, 21);

/**
 * @generated from message wire.GETSETRes
 */
export type GETSETRes = Message<"wire.GETSETRes"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message wire.GETSETRes.
 * Use `create(GETSETResSchema)` to create a new message.
 */
export const GETSETResSchema: GenMessage<GETSETRes> = /*@__PURE__*/
  messageDesc(file_res, 22);

/**
 * @generated from message wire.GETDELRes
 */
export type GETDELRes = Message<"wire.GETDELRes"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message wire.GETDELRes.
 * Use `create(GETDELResSchema)` to create a new message.
 */
export const GETDELResSchema: GenMessage<GETDELRes> = /*@__PURE__*/
  messageDesc(file_res, 23);

/**
 * @generated from message wire.SETRes
 */
export type SETRes = Message<"wire.SETRes"> & {
};

/**
 * Describes the message wire.SETRes.
 * Use `create(SETResSchema)` to create a new message.
 */
export const SETResSchema: GenMessage<SETRes> = /*@__PURE__*/
  messageDesc(file_res, 24);

/**
 * @generated from message wire.DELRes
 */
export type DELRes = Message<"wire.DELRes"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message wire.DELRes.
 * Use `create(DELResSchema)` to create a new message.
 */
export const DELResSchema: GenMessage<DELRes> = /*@__PURE__*/
  messageDesc(file_res, 25);

/**
 * @generated from message wire.FLUSHDBRes
 */
export type FLUSHDBRes = Message<"wire.FLUSHDBRes"> & {
};

/**
 * Describes the message wire.FLUSHDBRes.
 * Use `create(FLUSHDBResSchema)` to create a new message.
 */
export const FLUSHDBResSchema: GenMessage<FLUSHDBRes> = /*@__PURE__*/
  messageDesc(file_res, 26);

/**
 * @generated from message wire.KEYSRes
 */
export type KEYSRes = Message<"wire.KEYSRes"> & {
  /**
   * @generated from field: repeated string keys = 1;
   */
  keys: string[];
};

/**
 * Describes the message wire.KEYSRes.
 * Use `create(KEYSResSchema)` to create a new message.
 */
export const KEYSResSchema: GenMessage<KEYSRes> = /*@__PURE__*/
  messageDesc(file_res, 27);

/**
 * @generated from message wire.INCRRes
 */
export type INCRRes = Message<"wire.INCRRes"> & {
  /**
   * @generated from field: int64 value = 1;
   */
  value: bigint;
};

/**
 * Describes the message wire.INCRRes.
 * Use `create(INCRResSchema)` to create a new message.
 */
export const INCRResSchema: GenMessage<INCRRes> = /*@__PURE__*/
  messageDesc(file_res, 28);

/**
 * @generated from message wire.DECRRes
 */
export type DECRRes = Message<"wire.DECRRes"> & {
  /**
   * @generated from field: int64 value = 1;
   */
  value: bigint;
};

/**
 * Describes the message wire.DECRRes.
 * Use `create(DECRResSchema)` to create a new message.
 */
export const DECRResSchema: GenMessage<DECRRes> = /*@__PURE__*/
  messageDesc(file_res, 29);

/**
 * @generated from message wire.INCRBYRes
 */
export type INCRBYRes = Message<"wire.INCRBYRes"> & {
  /**
   * @generated from field: int64 value = 1;
   */
  value: bigint;
};

/**
 * Describes the message wire.INCRBYRes.
 * Use `create(INCRBYResSchema)` to create a new message.
 */
export const INCRBYResSchema: GenMessage<INCRBYRes> = /*@__PURE__*/
  messageDesc(file_res, 30);

/**
 * @generated from message wire.DECRBYRes
 */
export type DECRBYRes = Message<"wire.DECRBYRes"> & {
  /**
   * @generated from field: int64 value = 1;
   */
  value: bigint;
};

/**
 * Describes the message wire.DECRBYRes.
 * Use `create(DECRBYResSchema)` to create a new message.
 */
export const DECRBYResSchema: GenMessage<DECRBYRes> = /*@__PURE__*/
  messageDesc(file_res, 31);

/**
 * @generated from message wire.ZElement
 */
export type ZElement = Message<"wire.ZElement"> & {
  /**
   * @generated from field: int64 score = 1;
   */
  score: bigint;

  /**
   * @generated from field: string member = 2;
   */
  member: string;
};

/**
 * Describes the message wire.ZElement.
 * Use `create(ZElementSchema)` to create a new message.
 */
export const ZElementSchema: GenMessage<ZElement> = /*@__PURE__*/
  messageDesc(file_res, 32);

/**
 * @generated from message wire.ZRANGERes
 */
export type ZRANGERes = Message<"wire.ZRANGERes"> & {
  /**
   * @generated from field: repeated wire.ZElement elements = 1;
   */
  elements: ZElement[];
};

/**
 * Describes the message wire.ZRANGERes.
 * Use `create(ZRANGEResSchema)` to create a new message.
 */
export const ZRANGEResSchema: GenMessage<ZRANGERes> = /*@__PURE__*/
  messageDesc(file_res, 33);

/**
 * @generated from enum wire.Status
 */
export enum Status {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: ERR = 1;
   */
  ERR = 1,
}

/**
 * Describes the enum wire.Status.
 */
export const StatusSchema: GenEnum<Status> = /*@__PURE__*/
  enumDesc(file_res, 0);

